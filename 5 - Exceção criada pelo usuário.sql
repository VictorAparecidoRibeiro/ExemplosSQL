DROP TABLE PESSOA;

 

CREATE TABLE PESSOA(
    ID NUMBER(3) PRIMARY KEY,
    NOME VARCHAR2(120) NOT NULL
);

 

SELECT * FROM PESSOA;

 

CREATE OR REPLACE 
FUNCTION FUNC_CADPESSOA(PID IN NUMBER, PNOME IN VARCHAR2)
RETURN NUMBER
IS
    RET NUMBER := 0;
    QTDE NUMBER(1);
BEGIN
    IF PID > 0 AND PID <= 999 THEN
        IF LENGTH(PNOME) <= 120 AND PNOME IS NOT NULL THEN
            SELECT COUNT(*) INTO QTDE FROM PESSOA
                    WHERE ID = PID;
            IF QTDE = 0 THEN
                INSERT INTO PESSOA (ID, NOME)
                    VALUES (PID, PNOME);
            ELSE
                RET := -997;
            END IF;
        ELSE
            RET := -998;
        END IF;
    ELSE
        RET := -999;
    END IF;
    COMMIT;
    RETURN RET;
EXCEPTION
   WHEN OTHERS THEN
      DBMS_OUTPUT.PUT_LINE('código erro: ' || SQLCODE);
      DBMS_OUTPUT.PUT_LINE('descrição erro: ' || SQLERRM);
      ROLLBACK;
      RETURN SQLCODE;
END;

 

 


DECLARE
    X NUMBER(4);
BEGIN
    X := FUNC_CADPESSOA(2, 'MARIA');
    DBMS_OUTPUT.PUT_LINE('RESULTADO DA EXECUCAO: ' || X);
END;


-- EXCEÇÕES DEFINIDAS PELO USUÁRIO

DECLARE
    ERRO_VALIDA_NOTA EXCEPTION;
    X NUMBER := 5;
BEGIN
    IF(X > 5) THEN
        x := x*2;
    ELSE
        RAISE ERRO_VALIDA_NOTA;
    END IF;
EXCEPTION
    WHEN ERRO_VALIDA_NOTA THEN
        DBMS_OUTPUT.PUT_LINE('MINHA EXCEPTION');
    WHEN OTHERS THEN
      DBMS_OUTPUT.PUT_LINE('código erro: ' || SQLCODE);
      DBMS_OUTPUT.PUT_LINE('descrição erro: ' || SQLERRM);
END;

-- EXERCICIO FEITO COM 3 EXEPTION CRIADAS FUNCTION Q EU FIZ 

CREATE TABLE PESSOA(
    ID NUMBER(3) PRIMARY KEY,
    NOME VARCHAR2(120) NOT NULL
);

SELECT * FROM PESSOA;



CREATE OR REPLACE 
FUNCTION FUNC_CADPESSOA(PID IN NUMBER, PNOME IN VARCHAR2)
RETURN NUMBER
IS
    RET NUMBER := 0;
    QTDE NUMBER(1);
    ERRO_VALIDA_ID EXCEPTION;
    ERRO_VALIDA_NOME EXCEPTION;
    ERRO_VALIDA_EXISTENCIA EXCEPTION;
BEGIN
    IF PID > 0 AND PID <= 999 THEN
        IF LENGTH(PNOME) <= 120 AND PNOME IS NOT NULL THEN
            SELECT COUNT(*) INTO QTDE FROM PESSOA
                    WHERE ID = PID;
            IF QTDE = 0 THEN
                INSERT INTO PESSOA (ID, NOME)
                    VALUES (PID, PNOME);
            ELSE
                RAISE ERRO_VALIDA_EXISTENCIA;
                --RET := -997;
            END IF;
        ELSE
            RAISE ERRO_VALIDA_NOME;
            --RET := -998;
        END IF;
    ELSE
        RAISE ERRO_VALIDA_ID;
        --RET := -999;
    END IF;
	 RETURN RET;
    COMMIT;
 EXCEPTION
    WHEN ERRO_VALIDA_EXISTENCIA THEN
        DBMS_OUTPUT.PUT_LINE('Já existe o usuário');
        ROLLBACK;
       RETURN -997;

    WHEN ERRO_VALIDA_ID THEN
        DBMS_OUTPUT.PUT_LINE('ID fora de tamanho');
        ROLLBACK;
        RETURN -999;

    WHEN ERRO_VALIDA_NOME THEN
        DBMS_OUTPUT.PUT_LINE('Nome fora de tamanho');
        ROLLBACK;
        RETURN -998;

   WHEN OTHERS THEN
      DBMS_OUTPUT.PUT_LINE('código erro: ' || SQLCODE);
      DBMS_OUTPUT.PUT_LINE('descrição erro: ' || SQLERRM);
      ROLLBACK;
      RETURN SQLCODE;
END;



DECLARE
    X NUMBER(4);
BEGIN
    X := FUNC_CADPESSOA(3, 'MARIA');
    DBMS_OUTPUT.PUT_LINE('RESULTADO DA EXECUCAO: ' || X);
END;


-- EXERCICIO FEITO COM 3 EXEPTION CRIADAS FEITO PELO PROFESSOR 

CREATE OR REPLACE
FUNCTION FUNC_CADPESSOA(PID IN NUMBER, PNOME IN VARCHAR2)
RETURN NUMBER
IS
    RET NUMBER := 0;
    QTDE NUMBER(1);
    VALIDA_ID_FAIXA EXCEPTION;
BEGIN
    IF PID > 0 AND PID <= 999 THEN
        IF LENGTH(PNOME) <= 120 AND PNOME IS NOT NULL THEN
            SELECT COUNT(*) INTO QTDE FROM PESSOA
                    WHERE ID = PID;
            IF QTDE = 0 THEN
                INSERT INTO PESSOA (ID, NOME)
                    VALUES (PID, PNOME);
            ELSE
                RET := -997;
            END IF;
        ELSE
            RET := -998;
        END IF;
    ELSE
        RAISE VALIDA_ID_FAIXA;
    END IF;
    COMMIT;
    RETURN RET;
EXCEPTION
   WHEN VALIDA_ID_FAIXA THEN
      DBMS_OUTPUT.PUT_LINE('NOSSA EXCEPTION');
      ROLLBACK;
      RETURN -999;
   WHEN OTHERS THEN
      DBMS_OUTPUT.PUT_LINE('código erro: ' || SQLCODE);
      DBMS_OUTPUT.PUT_LINE('descrição erro: ' || SQLERRM);
      ROLLBACK;
      RETURN SQLCODE;
END;
